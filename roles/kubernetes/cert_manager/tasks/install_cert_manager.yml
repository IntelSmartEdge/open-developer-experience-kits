# SPDX-License-Identifier: Apache-2.0
# Copyright (c) 2021-2022 Intel Corporation
---

- name: create temporary directory for cert-manager installation
  tempfile:
    state: directory
    prefix: cert-manager
  register: temp_dir

- name: template values.yaml
  template:
    src: "values.yaml.j2"
    dest: "{{ temp_dir.path }}/values.yaml"
    mode: u+rw

# Due to issues with downloading chart from cert manager chart repository
# retries were added to prevent task from failing
- name: execute helm install command
  command:
    argv:
      - helm
      - install
      - --repo
      - "{{ offline_chart_server }}"
      - --namespace
      - "{{ _cert_manager_namespace }}"
      - --create-namespace
      - --version
      - "{{ _cert_manager_version }}"
      - --set
      - installCRDs=true
      - -f
      - "{{ temp_dir.path }}/values.yaml"
      - "{{ _cert_manager_release_name }}"
      - "{{ _cert_manager_chart }}"
  changed_when: true
  register: result
  retries: "{{ number_of_retries | default(10) }}"
  until: result is succeeded
  delay: "{{ retry_delay | default(5) }}"

- name: check if CA secret exists
  command: kubectl get secret root-ca --namespace={{ _cert_manager_namespace }}
  failed_when: false
  changed_when: false
  register: rootca_query

- name: create CA secret if it doesn't exists
  block:
    - name: create root CA certificate
      command: "{{ project_dir }}/scripts/tls_pair.sh {{ _subject }} {{ temp_dir.path }}"
      changed_when: true
    - name: create secret with root CA
      command: kubectl create secret tls {{ _ca_secret_name }}
        --cert={{ temp_dir.path }}/cert.pem
        --key={{ temp_dir.path }}/key.pem
        --namespace={{ _cert_manager_namespace }}
  when: rootca_query.rc != 0

- name: template ClusterIssuer manifest
  template:
    src: "issuer.yaml.j2"
    dest: "{{ temp_dir.path }}/issuer.yaml"
    mode: u+rw

- name: apply ClusterIssuer manifest
  command: "kubectl apply -f {{ temp_dir.path }}/issuer.yaml"
  changed_when: true

- name: remove temporary folder
  file:
    path: "{{ temp_dir.path }}"
    state: absent
