# SPDX-License-Identifier: Apache-2.0
# Copyright (c) 2020 Intel Corporation

---
- name: apply firewall rules
  include_tasks: ../../common/tasks/firewall_rules.yml

- name: create NetworkManager conf.d directory
  file:
    name: /etc/NetworkManager/conf.d
    state: directory
    mode: a=rx,u+w
  become: yes

- name: add NetworkManager config - ignore calico's interfaces
  copy:
    dest: /etc/NetworkManager/conf.d/calico.conf
    mode: preserve
    content: |
      [keyfile]
      unmanaged-devices=interface-name:cali*;interface-name:tunl*
  become: yes

- name: create temp dir
  tempfile:
    state: directory
    suffix: -calico
  register: tmp_dir

- name: download calico yml
  get_url:
    url: "{{ offline_file_server }}/calico.yaml"
    dest: "{{ tmp_dir.path }}/calico.yml"
  register: result
  retries: "{{ number_of_retries }}"
  until: result is succeeded
  delay: "{{ retry_delay }}"

- name: copy kustomization.yml
  copy:
    src: "{{ item }}"
    dest: "{{ tmp_dir.path }}"
    mode: preserve
  loop:
    - kustomization.yml
    - customize_calico_container.yml

- name: Overwrite kustomization_ebpf.yml for ebpf
  copy:
    src: "kustomization_ebpf.yml"
    dest: "{{ tmp_dir.path }}/kustomization.yml"
    mode: preserve
  when: calico_ebpf_enabled | default(false)

- name: create kustomization files from templates
  template:
    src: "{{ item }}.j2"
    dest: "{{ tmp_dir.path }}/{{ item }}"
    mode: preserve
  loop:
    - customize_calico_conf.yml
    - change_cidr.yml

- name: Add Kubernetes service host to the calico configmap
  block:
    - name: get the endpoint IP
      shell: kubectl  get endpoints | grep kuber | awk 'BEGIN { FS = "[ ]+" } { print $2}' | awk -F ":" '{print $1}'
      args:
        warn: false
      register: endpoint_ip
    - name: get the endpoint Port
      shell: kubectl  get endpoints | grep kuber | awk 'BEGIN { FS = "[ ]+" } { print $2}' | awk -F ":" '{print $2}'
      args:
        warn: false
      register: endpoint_port
    - name: replace host line
      lineinfile:
        dest: "{{ tmp_dir.path }}/calico.yml"
        regexp: "^  kubernetes_service_host: (.*)$"
        line: '  kubernetes_service_host: "{{ endpoint_ip.stdout }}"'
        backrefs: true
    - name: replace port line
      lineinfile:
        dest: "{{ tmp_dir.path }}/calico.yml"
        regexp: "^  kubernetes_service_port: (.*)$"
        line: '  kubernetes_service_port: "{{ endpoint_port.stdout }}"'
        backrefs: true
    - name: disable kube-proxy
      shell: kubectl patch ds -n kube-system kube-proxy -p '{"spec":{"template":{"spec":{"nodeSelector":{"non-calico":"true"}}}}}'  # noqa var-spacing
      args:
        warn: false
  when: calico_ebpf_enabled | default(false)

- name: apply calico.yml with change
  shell: >
    set -o pipefail &&
    kubectl kustomize . | kubectl apply -f -
  args:
    chdir: "{{ tmp_dir.path }}"
  changed_when: true

- name: apply NetworkAttachmentDefinition
  block:
    - name: copy NetworkAttachmentDefinition to remote from template
      template:
        src: calico_net_attach_def.yml.j2
        dest: "{{ tmp_dir.path }}/calico_net_attach_def.yml"
        mode: preserve
    - name: apply Calico's NetworkAttachmentDefinition
      command: kubectl apply -f {{ tmp_dir.path }}/calico_net_attach_def.yml
  when:
    - apply_netdef is defined
    - apply_netdef
    - not ( calico_ebpf_enabled | default(false) )
