# SPDX-License-Identifier: Apache-2.0
# Copyright (c) 2021 Intel Corporation
---
- name: Load OS specyfic vars
  include_vars: debian.yml
  when:
    - ansible_os_family == "Debian"

- name: get installed OpenSSL version
  command: "openssl version"
  ignore_errors: true
  register: openssl_installed_version
  changed_when: false

- name: install base OpenSSL from sources
  block:
  - name: install dependencies
    include_role:
      name: infrastructure/install_dependencies

  - name: create OpenSSL directory
    file:
      path: "{{ openssl_project_dir }}"
      state: directory
      owner: "{{ project_user }}"
      group: "{{ project_group  }}"
      mode: a=rx,u+w
    become: yes

  - name: "OpenSSL download from {{ openssl_download_url }}"
    get_url:
      url: "{{ offline_file_server }}/download/openssl-1.1.1m.tar.gz"
      dest: "{{ openssl_project_dir }}"
      checksum: "{{ openssl_checksum }}"
      owner: "{{ project_user }}"
      group: "{{ project_group }}"
      mode: a=rx,u+w
    register: openssl_download_result
    retries: "{{ number_of_retries  }}"
    until: openssl_download_result is succeeded
    delay: "{{ retry_delay }}"

  - name: OpenSSL extract
    unarchive:
      src: "{{ openssl_download_result.dest }}"
      dest: "{{ openssl_project_dir }}"
      owner: "{{ project_user }}"
      group: "{{ project_group }}"
      mode: a=rx,u+w
      remote_src: true

  - name: Set OpenSSL configure options
    set_fact:
      openssl_config_options: >
        --prefix={{ openssl_custom_install_path }}
        --openssldir={{ openssl_custom_install_path }}
        -Wl,-rpath,{{ openssl_custom_install_path }}lib
    when: ansible_distribution == "RedHat"

  - name: OpenSSL configure
    command: "./config {{ openssl_config_options|default('') }}"
    args:
      chdir: "{{ openssl_project_dir }}/{{ openssl_package_name }}"

  - name: OpenSSL make
    command:
      cmd: make -j
      chdir: "{{ openssl_project_dir }}/{{ openssl_package_name }}"
    changed_when: false

  - name: OpenSSL install sw
    make:
      chdir: "{{ openssl_project_dir }}/{{ openssl_package_name }}"
      target: install_sw
    become: yes

  - name: OpenSSL install ssl dirs
    make:
      chdir: "{{ openssl_project_dir }}/{{ openssl_package_name }}"
      target: install_ssldirs
    become: yes

  - name: OpenSSL system wide
    become: yes
    block:
    - name: OpenSSL create ld config
      lineinfile:
        state: present
        create: true
        dest: "/etc/ld.so.conf.d/localuser.conf"
        line: "{{ item }}"
        mode: a=r,u+w
      loop:
        - "/usr/local/lib"
        - "/usr/local/lib64"

    - name: OpenSSL reload ld configs
      command: "ldconfig -v"
    when: ansible_distribution != "RedHat"

  - name: OpenSSL install binary
    lineinfile:
      state: present
      create: true
      dest: "/etc/profile.d/openssl.sh"
      line: "PATH={{ openssl_custom_install_path }}bin/:$PATH"
      mode: a=r,u+w
    become: yes
    when: ansible_distribution == "RedHat"

  - name: Setup certificates
    include_tasks: setup_certs.yml

  when: openssl_version|string not in openssl_installed_version.stdout.split()
